{"version":3,"sources":["utils/math.ts","libs/BSplinePolynomial.ts","libs/BSpline.ts","libs/UniformBSpline.ts","pages/UniformBSplineOfOrderThree/UniformBSplineOfOrderThree.tsx","pages/UniformBSplineOfOrderThree/index.ts","libs/OpenUnformBSplineClass.ts","pages/OpenUniformBSpline/index.ts","pages/OpenUniformBSpline/OpenUniformBSpline.tsx","components/RouterHeader/index.ts","components/RouterHeader/RouterHeader.tsx","pages/DynamicBSpline/DynamicBSpline.tsx","pages/DynamicBSpline/index.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["getDividedValue","numerator","denominator","BSplinePolynomial","tArray","order","maxIndex","cache","Map","polynomialArray","this","length","i","push","index","cacheFunc","get","getPolynomialFunc","func","tList","polynomialIndexSubtractOne","t","k1","k2","set","BSpline","opts","points","bSplinePolynomial","Error","reduce","prev","curr","x","y","nx","ny","ratio","point","UniformBSpline","cPoints","bSpline","generateTArray","arr","step","min","max","getPoint","UniformBSplineOfOrderThree","elRef","useRef","useState","z","setZ","useEffect","current","zrender","init","renderer","linePoints","getPoints","line","Polyline","shape","add","forEach","o","circle","Circle","cx","cy","r","draggable","on","e","offsetX","offsetY","dirty","style","padding","textAlign","marginBottom","ref","width","height","OpenUniformBSplineClass","mutationPointIndexes","ratioCache","tLen","OpenUniformBSpline","p","newPoint","updatePoint","RouterHeader","history","useHistory","location","useLocation","Group","value","pathname","onChange","target","Button","DEFAULT_C_POINTS","DEFAULT_T_ARRAY","DynamicBSpline","setOrder","cloneDeep","setCPoints","setTArray","handleGenerate","clear","text","Text","textOffset","fontSize","error","notification","message","description","len","newTArray","undefined","console","log","layout","Item","label","map","cp","display","key","paddingRight","onClick","marginTop","type","App","path","component","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5d4bb08a.chunk.js","sourcesContent":["export const getDividedValue = (numerator: number, denominator: number) => {\n  if (denominator === 0) {\n    return 0;\n  } else {\n    return numerator / denominator;\n  }\n};\n","/*\n * @Author: 沈经纬(327538014@qq.com)\n * @Date: 2019-12-16 15:37:00\n * @Last Modified by: 沈经纬(327538014@qq.com)\n * @Last Modified time: 2019-12-16 15:48:09\n * @Content: B样条曲线多项式求值器\n */\nimport { getDividedValue } from \"../utils/math\";\n\ntype IPolynomialFunc = (t: number) => number;\n\nexport class BSplinePolynomial {\n  /**\n   * 多项式阶数\n   */\n  readonly order: number;\n  readonly tArray: number[];\n  readonly maxIndex: number;\n  private cache: Map<number, IPolynomialFunc> = new Map();\n  private polynomialArray: BSplinePolynomial[] = [];\n\n  /**\n   * @param tArray 多项式取值边界点\n   * @param order 多项式阶数（例如3阶则为2次，5阶则为4次）\n   */\n  constructor(tArray: number[], order: number) {\n    this.tArray = tArray;\n    this.order = order;\n    this.maxIndex = tArray.length - order;\n    for (let i = 0; i < order; i += 1) {\n      this.polynomialArray.push(new BSplinePolynomial(this.tArray, i));\n    }\n  }\n\n  get(index: number): IPolynomialFunc {\n    if (index > this.maxIndex) {\n      return () => 0;\n    }\n    const cacheFunc = this.cache.get(index);\n    if (cacheFunc) {\n      return cacheFunc;\n    }\n    return this.getPolynomialFunc(index);\n  }\n\n  /**\n   * 获取多项式求值函数，返回一个接受t参数的函数\n   * @param index 即公式中k值\n   */\n  private getPolynomialFunc(index: number): IPolynomialFunc {\n    const tList = this.tArray;\n    const order = this.order;\n    const polynomialIndexSubtractOne = this.polynomialArray[order - 1];\n    let func: IPolynomialFunc;\n    if (order === 1) {\n      func = (t: number) => {\n        if (t >= this.tArray[index] && t < this.tArray[index + 1]) {\n          return 1;\n        } else {\n          return 0;\n        }\n      };\n    } else {\n      const k1 = tList[index + order - 1] - tList[index];\n      const k2 = tList[index + order] - tList[index + 1];\n      func = (t: number) => {\n        return (\n          getDividedValue(t - tList[index], k1) *\n            polynomialIndexSubtractOne.get(index)(t) +\n          getDividedValue(tList[index + order] - t, k2) *\n            polynomialIndexSubtractOne.get(index + 1)(t)\n        );\n      };\n    }\n    this.cache.set(index, func);\n    return func;\n  }\n}\n","import { BSplinePolynomial } from \"./BSplinePolynomial\";\nimport { IPoint } from \"./types\";\n\ninterface IBSplineOpts {\n  order: number;\n  points: IPoint[];\n  tArray: number[];\n}\n\nexport class BSpline {\n  order: number;\n  points: IPoint[];\n  tArray: number[];\n  bSplinePolynomial: BSplinePolynomial;\n\n  constructor(opts: IBSplineOpts) {\n    this.order = opts.order;\n    this.points = opts.points;\n    this.tArray = opts.tArray;\n    if (this.order > this.points.length) {\n      throw new Error(\n        `the order(${this.order}) cannot be greater than the length of control point(${this.points.length}).`\n      );\n    }\n    if (this.order < 2) {\n      throw new Error(\"order cannot be less than 2.\");\n    }\n    if (this.tArray.length !== this.points.length + this.order) {\n      throw new Error(\n        `the array length of parameter t (${this.tArray.length}) must be equal to the sum of the length of points (${this.points.length}) and the order (${this.order}).`\n      );\n    }\n    this.bSplinePolynomial = new BSplinePolynomial(this.tArray, this.order);\n  }\n\n  getPoint(t: number) {\n    return this.points.reduce(\n      (prev, curr, index) => {\n        const [x, y] = prev;\n        const [nx, ny] = curr;\n        const ratio = this.bSplinePolynomial.get(index)(t);\n        return [x + ratio * nx, y + ratio * ny];\n      },\n      [0, 0]\n    );\n  }\n\n  updatePoint(index: number, point: IPoint) {\n    if (index < 0 || index > this.points.length - 1) {\n      throw new Error(`parameter index error.`);\n    }\n    this.points[index] = point;\n  }\n}\n","/*\n * @Author: 沈经纬(327538014@qq.com)\n * @Date: 2019-12-16 15:48:53\n * @Last Modified by: 沈经纬(327538014@qq.com)\n * @Last Modified time: 2019-12-16 15:49:37\n * @Content: 3阶均匀B样条曲线\n */\nimport { IPoint } from \"./types\";\nimport { BSpline } from \"./BSpline\";\n\nexport class UniformBSpline {\n  bSpline: BSpline;\n\n  constructor(cPoints: IPoint[]) {\n    this.bSpline = new BSpline({\n      points: cPoints,\n      order: 3,\n      tArray: this.generateTArray(cPoints, 3),\n    });\n  }\n\n  /**\n   * 生成t取值边界的数组\n   */\n  generateTArray(cPoints: IPoint[], order: number): number[] {\n    const arr: number[] = [];\n    for (let i = 0; i < cPoints.length + order; i++) {\n      arr.push(i);\n    }\n    return arr;\n  }\n\n  getPoints(step: number = 0.05): IPoint[] {\n    const min = this.bSpline.tArray[0];\n    const max = this.bSpline.tArray[this.bSpline.tArray.length - 1];\n    const arr: IPoint[] = [];\n    for (let i = min; i <= max; i += step) {\n      arr.push(this.bSpline.getPoint(i));\n    }\n    return arr;\n  }\n}\n","import React, { useRef, useEffect, useState } from \"react\";\nimport zrender from \"zrender\";\nimport { UniformBSpline } from \"../../libs/UniformBSpline\";\nimport { IPoint } from \"../../libs/types\";\n\nlet points: IPoint[] = [\n  [50, 10],\n  [100, 30],\n  [200, 60],\n  [300, 300],\n  [150, 200],\n  [100, 150],\n  [50, 100],\n];\n\nexport default function UniformBSplineOfOrderThree() {\n  const elRef = useRef<HTMLDivElement>(null);\n  const [z, setZ] = useState<any>(null);\n\n  useEffect(() => {\n    if (elRef.current && z == null) {\n      setZ(zrender.init(elRef.current, { renderer: \"canvas\" }));\n    }\n    // eslint-disable-next-line\n  }, [elRef.current]);\n\n  useEffect(() => {\n    if (z) {\n      const bSpline = new UniformBSpline(points);\n      const linePoints = bSpline.getPoints();\n      let line = new zrender.Polyline({\n        shape: {\n          points: linePoints,\n        },\n      });\n      z.add(line);\n\n      points.forEach((o, i) => {\n        const circle = new zrender.Circle({\n          shape: {\n            cx: o[0],\n            cy: o[1],\n            r: 3,\n          },\n          draggable: true,\n        });\n        circle.on(\"drag\", (e: any) => {\n          points[i] = [e.offsetX, e.offsetY] as IPoint;\n          const bSpline = new UniformBSpline(points);\n          const linePoints = bSpline.getPoints();\n          line.shape.points = linePoints;\n          line.dirty();\n        });\n        z.add(circle);\n      });\n    }\n  }, [z]);\n\n  return (\n    <div style={{ padding: \"32px 0\" }}>\n      <div style={{ textAlign: \"center\", marginBottom: \"32px\" }}>\n        The three order uniform b-spline-curve(均匀三阶B样条曲线)\n      </div>\n      <div ref={elRef} style={{ width: \"100%\", height: \"600px\" }} />\n    </div>\n  );\n}\n","import UniformBSplineOfOrderThree from \"./UniformBSplineOfOrderThree\";\n\nexport default UniformBSplineOfOrderThree;\n","/*\n * @Author: 沈经纬(327538014@qq.com)\n * @Date: 2019-12-16 15:48:36\n * @Last Modified by:   沈经纬(327538014@qq.com)\n * @Last Modified time: 2019-12-16 15:48:36\n * @Content: 开放均匀B样条曲线\n */\nimport { IPoint } from \"./types\";\nimport { BSpline } from \"./BSpline\";\n\nexport class OpenUniformBSplineClass {\n  mutationPointIndexes: number[] = [];\n  ratioCache: Map<number, number> = new Map();\n  bSpline: BSpline;\n\n  constructor(cPoints: IPoint[], order: number) {\n    if (order > cPoints.length) {\n      throw new Error(\n        `the order(${order}) cannot be greater than the length of control point(${cPoints.length}).`\n      );\n    }\n    if (order < 2) {\n      throw new Error(\"order cannot be less than 2.\");\n    }\n    this.bSpline = new BSpline({\n      order,\n      points: cPoints,\n      tArray: this.generateTArray(cPoints, order),\n    });\n  }\n\n  private generateTArray(cPoints: IPoint[], order: number) {\n    const arr: number[] = [];\n    const tLen = cPoints.length + order;\n    for (let i = 0; i < tLen; i += 1) {\n      if (i < order) {\n        arr.push(0);\n      } else if (i <= cPoints.length) {\n        arr.push(i - order + 1);\n      } else {\n        arr.push(cPoints.length - order + 1);\n      }\n    }\n    return arr;\n  }\n\n  getPoint(t: number) {\n    return this.bSpline.getPoint(t);\n  }\n\n  updatePoint(index: number, point: IPoint) {\n    if (index < 0 || index > this.bSpline.points.length - 1) {\n      throw new Error(`parameter index error.`);\n    }\n    this.bSpline.points[index] = point;\n  }\n}\n","import OpenUniformBSpline from \"./OpenUniformBSpline\";\n\nexport default OpenUniformBSpline;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport zrender from \"zrender\";\nimport { IPoint } from \"../../libs/types\";\nimport { OpenUniformBSplineClass } from \"../../libs/OpenUnformBSplineClass\";\n\nexport default function OpenUniformBSpline() {\n  const elRef = useRef<HTMLDivElement>(null);\n  const [z, setZ] = useState<any>(null);\n\n  useEffect(() => {\n    if (elRef.current && z == null) {\n      setZ(zrender.init(elRef.current, { renderer: \"canvas\" }));\n    }\n    // eslint-disable-next-line\n  }, [elRef.current]);\n\n  useEffect(() => {\n    if (z) {\n      const cPoints: IPoint[] = [\n        [50, 50],\n        [100, 70],\n        [80, 140],\n        [100, 200],\n        [160, 180],\n        [200, 200],\n        [200, 300],\n        [300, 200],\n        [400, 400],\n      ];\n      const bSpline = new OpenUniformBSplineClass(cPoints, 3);\n      const points: IPoint[] = [];\n      for (\n        let i = 0;\n        i <= bSpline.bSpline.tArray[bSpline.bSpline.tArray.length - 1];\n        i += 0.01\n      ) {\n        const p = bSpline.getPoint(i);\n        points.push(p);\n      }\n      let line = new zrender.Polyline({\n        shape: {\n          points,\n        },\n      });\n      z.add(line);\n\n      cPoints.forEach((o, i) => {\n        const circle = new zrender.Circle({\n          shape: {\n            cx: o[0],\n            cy: o[1],\n            r: 3,\n          },\n          draggable: true,\n        });\n        circle.on(\"drag\", (e: any) => {\n          const newPoint = [e.offsetX, e.offsetY] as IPoint;\n          cPoints[i] = newPoint;\n          bSpline.updatePoint(i, newPoint);\n          const points: IPoint[] = [];\n          for (\n            let i = 0;\n            i <= bSpline.bSpline.tArray[bSpline.bSpline.tArray.length - 1];\n            i += 0.01\n          ) {\n            const p = bSpline.getPoint(i);\n            points.push(p);\n          }\n          line.shape.points = points;\n          line.dirty();\n        });\n        z.add(circle);\n      });\n    }\n  }, [z]);\n  return (\n    <div style={{ padding: \"32px 0\" }}>\n      <div style={{ textAlign: \"center\", marginBottom: \"32px\" }}>\n        The open uniform b-spline-curve(开放均匀B样条曲线)\n      </div>\n      <div ref={elRef} style={{ width: \"100%\", height: \"400px\" }} />\n    </div>\n  );\n}\n","import RouterHeader from \"./RouterHeader\";\n\nexport default RouterHeader;\n","import React from \"react\";\nimport { Radio } from \"antd\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nexport default function RouterHeader() {\n  const history = useHistory();\n  const location = useLocation();\n  return (\n    <div style={{ padding: \"16px\" }}>\n      <h1 style={{ textAlign: \"center\" }}>B-Spline-Curve(B样条曲线)</h1>\n      <Radio.Group\n        value={location.pathname}\n        onChange={e => {\n          history.push(e.target.value);\n        }}\n      >\n        <Radio.Button value=\"/uniform-b-spline-of-order-3\">\n          The three order uniform b-spline(均匀3阶B样条)\n        </Radio.Button>\n        <Radio.Button value=\"/open-uniform-b-spline\">\n          The open uniform b-spline(开放均匀B样条)\n        </Radio.Button>\n        <Radio.Button value=\"/dynamic-b-spline\">\n          The custom b-spline(自由参数的B样条曲线)\n        </Radio.Button>\n      </Radio.Group>\n    </div>\n  );\n}\n","import React, { useRef, useState, useEffect } from \"react\";\nimport zrender from \"zrender\";\nimport { map, cloneDeep } from \"lodash\";\nimport { IPoint } from \"../../libs/types\";\nimport { Form, InputNumber, Button, notification } from \"antd\";\nimport { BSpline } from \"../../libs/BSpline\";\n\nconst DEFAULT_C_POINTS: IPoint[] = [\n  [50, 50],\n  [100, 70],\n  [200, 200],\n  [200, 300],\n  [400, 400],\n];\nconst DEFAULT_T_ARRAY: number[] = [0, 0, 0, 1, 2, 3, 3, 3];\n\nexport default function DynamicBSpline() {\n  const elRef = useRef<HTMLDivElement>(null);\n  const [z, setZ] = useState<any>(null);\n  const [order, setOrder] = useState<number | undefined>(3);\n  const [cPoints, setCPoints] = useState<IPoint[]>(cloneDeep(DEFAULT_C_POINTS));\n  const [tArray, setTArray] = useState<number[]>(cloneDeep(DEFAULT_T_ARRAY));\n\n  useEffect(() => {\n    if (elRef.current && z == null) {\n      setZ(zrender.init(elRef.current, { renderer: \"canvas\" }));\n    }\n    // eslint-disable-next-line\n  }, [elRef.current]);\n\n  const handleGenerate = () => {\n    if (z == null || order == null) {\n      return;\n    }\n    z.clear();\n    try {\n      const bSpline = new BSpline({\n        points: cloneDeep(cPoints),\n        tArray,\n        order,\n      });\n      const points: IPoint[] = [];\n      for (\n        let i = 0;\n        i <= bSpline.tArray[bSpline.tArray.length - 1];\n        i += 0.05\n      ) {\n        const p = bSpline.getPoint(i);\n        points.push(p);\n      }\n      let line = new zrender.Polyline({\n        shape: {\n          points,\n        },\n      });\n      z.add(line);\n\n      cPoints.forEach((o, i) => {\n        const circle = new zrender.Circle({\n          shape: {\n            cx: o[0],\n            cy: o[1],\n            r: 3,\n          },\n          draggable: true,\n        });\n        const text = new zrender.Text({\n          style: {\n            text: `t${i}(${o[0]}, ${o[1]})`,\n            textOffset: [o[0], o[1]],\n            x: o[0] + 6,\n            y: o[1] - 6,\n            fontSize: 10,\n          },\n        });\n        circle.on(\"drag\", (e: any) => {\n          const newPoint = [e.offsetX, e.offsetY] as IPoint;\n          bSpline.updatePoint(i, newPoint);\n          const points: IPoint[] = [];\n          for (\n            let i = 0;\n            i <= bSpline.tArray[bSpline.tArray.length - 1];\n            i += 0.01\n          ) {\n            const p = bSpline.getPoint(i);\n            points.push(p);\n          }\n          line.shape.points = points;\n          text.style.x = e.offsetX + 6;\n          text.style.y = e.offsetY - 6;\n          text.style.text = `t${i}(${e.offsetX}, ${e.offsetY})`;\n          text.dirty();\n          line.dirty();\n        });\n        z.add(circle);\n        z.add(text);\n      });\n    } catch (error) {\n      notification.error({\n        message: \"Error Drawing\",\n        description: error.message,\n      });\n    }\n  };\n\n  const handleReset = () => {\n    setOrder(3);\n    setCPoints(cloneDeep(DEFAULT_C_POINTS));\n    setTArray(cloneDeep(DEFAULT_T_ARRAY));\n    handleGenerate();\n  };\n\n  useEffect(() => {\n    if (z) {\n      handleGenerate();\n    }\n    // eslint-disable-next-line\n  }, [z]);\n\n  useEffect(() => {\n    if (order) {\n      const len = order + cPoints.length;\n      if (len !== tArray.length) {\n        const newTArray = cloneDeep(tArray);\n        newTArray.length = len;\n        for (let i = 0; i < len; i += 1) {\n          if (newTArray[i] === undefined) {\n            newTArray[i] = tArray[tArray.length - 1];\n          }\n        }\n        console.log(newTArray);\n        setTArray(newTArray);\n      }\n    }\n    // eslint-disable-next-line\n  }, [order, cPoints]);\n\n  return (\n    <div style={{ padding: \"16px\" }}>\n      <div style={{ textAlign: \"center\", marginBottom: \"32px\" }}>\n        B-Spline-Curve with custom\n        parameters(自由参数的B样条曲线)（默认为开放均匀三阶B样条）\n      </div>\n      <Form layout=\"inline\">\n        <Form.Item label=\"Order(阶数)\">\n          <InputNumber step={1} min={2} value={order} onChange={setOrder} />\n        </Form.Item>\n        <Form.Item label=\"Control Points(控制点)\">\n          <div style={{ textAlign: \"center\" }}>\n            {map(cPoints, (cp, index) => {\n              return (\n                <div\n                  style={{ display: \"flex\", marginBottom: \"6px\" }}\n                  key={index}\n                >\n                  <div style={{ paddingRight: \"6px\" }}>\n                    x<sub>{index}</sub>{\" \"}\n                    <InputNumber\n                      value={cp[0]}\n                      onChange={e => {\n                        cPoints[index][0] = e || 0;\n                        setCPoints([...cPoints]);\n                      }}\n                    />\n                  </div>\n                  <div>\n                    y<sub>{index}</sub>{\" \"}\n                    <InputNumber\n                      value={cp[1]}\n                      onChange={e => {\n                        cPoints[index][1] = e || 0;\n                        setCPoints([...cPoints]);\n                      }}\n                    />\n                  </div>\n                </div>\n              );\n            })}\n            <Button\n              onClick={() => {\n                cPoints.push([0, 0]);\n                setCPoints([...cPoints]);\n              }}\n              style={{ marginTop: \"16px\" }}\n            >\n              Add Point(添加控制点)\n            </Button>\n          </div>\n        </Form.Item>\n        <Form.Item label=\"Array of parameter t(参数t数组)\">\n          <>\n            {map(tArray, (t, index) => {\n              return (\n                <div style={{ marginBottom: \"6px\" }} key={index}>\n                  t<sub>{index}</sub>:{\" \"}\n                  <InputNumber\n                    value={t}\n                    onChange={e => {\n                      tArray[index] = e || 0;\n                      setTArray([...tArray]);\n                    }}\n                  />\n                </div>\n              );\n            })}\n          </>\n        </Form.Item>\n\n        <Form.Item>\n          <Button.Group>\n            <Button type=\"primary\" onClick={handleGenerate}>\n              Generate(生成)\n            </Button>\n            <Button type=\"danger\" onClick={handleReset}>\n              Reset(重置)\n            </Button>\n          </Button.Group>\n        </Form.Item>\n      </Form>\n      <div ref={elRef} style={{ width: \"100%\", height: \"600px\" }} />\n    </div>\n  );\n}\n","import DynamicBSpline from \"./DynamicBSpline\";\n\nexport default DynamicBSpline;\n","import React from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport UniformBSplineOfOrderThree from \"./pages/UniformBSplineOfOrderThree\";\nimport OpenUniformBSpline from \"./pages/OpenUniformBSpline\";\nimport RouterHeader from \"./components/RouterHeader\";\nimport DynamicBSpline from \"./pages/DynamicBSpline\";\n\nconst App: React.FC = () => {\n  return (\n    <Router>\n      <RouterHeader />\n      <Switch>\n        <Route\n          path=\"/uniform-b-spline-of-order-3\"\n          component={UniformBSplineOfOrderThree}\n        />\n        <Route path=\"/open-uniform-b-spline\" component={OpenUniformBSpline} />\n        <Route path=\"/dynamic-b-spline\" component={DynamicBSpline} />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}